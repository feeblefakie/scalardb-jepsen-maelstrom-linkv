2025-06-20 15:02:42,085{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w lin-kv --bin ./maelstrom-wrapper.sh --concurrency 30 --time-limit 10 --rate 10 --key-count 3
2025-06-20 15:02:42,119{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count nil
 :availability nil
 :max-txn-length 4
 :concurrency 30
 :key-count 3
 :db
 #object[maelstrom.db$db$reify__16612
         "0x69c27acb"
         "maelstrom.db$db$reify__16612@69c27acb"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "lin-kv"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0xf500481" "2025-06-20T15:02:42.058+09:00"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15721
         "0x38dde7ec"
         "maelstrom.net$jepsen_net$reify__15721@38dde7ec"]
 :client
 #object[maelstrom.workload.lin_kv$client$reify__20973
         "0x3bc57af4"
         "maelstrom.workload.lin_kv$client$reify__20973@3bc57af4"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x3f19f197"
         "java.util.concurrent.CyclicBarrier@3f19f197"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 10.0
 :checker
 #object[jepsen.checker$compose$reify__11089
         "0x30628ef9"
         "jepsen.checker$compose$reify__11089@30628ef9"]
 :argv
 ("test"
  "-w"
  "lin-kv"
  "--bin"
  "./maelstrom-wrapper.sh"
  "--concurrency"
  "30"
  "--time-limit"
  "10"
  "--rate"
  "10"
  "--key-count"
  "3")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16905@6757ed9e"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16886@77d5395a"]})
 :nodes ["n1" "n2" "n3" "n4" "n5"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "./maelstrom-wrapper.sh"
 :generator
 #object[jepsen.util.Forgettable
         "0x5af850f1"
         (jepsen.generator.TimeLimit
          {:limit 10000000000,
           :cutoff nil,
           :gen (jepsen.generator.Any
                 {:gens [(jepsen.generator.OnThreads
                          {:f #{:nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                                   "0x734db023"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__12077@734db023"],
                           :gen nil})
                         (jepsen.generator.OnThreads
                          {:f #jepsen.generator.context.AllBut{:element :nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                                   "0x22bf2a0d"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__12077@22bf2a0d"],
                           :gen (jepsen.generator.Stagger
                                 {:dt 200000000,
                                  :next-time nil,
                                  :gen (jepsen.generator.OnThreads
                                        {:f #jepsen.generator.context.AllBut{:element :nemesis},
                                         :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                                                 "0x61774805"
                                                                 "jepsen.generator.context$make_thread_filter$lazy_filter__12077@61774805"],
                                         :gen (jepsen.independent.ConcurrentGenerator
                                               {:n 10,
                                                :fgen #object[jepsen.tests.linearizable_register$test$fn__17385
                                                              "0x57e351a"
                                                              "jepsen.tests.linearizable_register$test$fn__17385@57e351a"],
                                                :group->threads nil,
                                                :thread->group nil,
                                                :group->context-filter nil,
                                                :keys (0 1 2 3 4 5 6 7 ...),
                                                :gens nil})})})})]})})]
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15724
         "0x4098ef14"
         "maelstrom.net$jepsen_os$reify__15724@4098ef14"]
 :time-limit 10
 :workload :lin-kv
 :consistency-models [:strict-serializable]
 :topology :grid}

2025-06-20 15:02:43,207{GMT}	INFO	[jepsen node n1] maelstrom.net: Starting Maelstrom network
2025-06-20 15:02:43,208{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2025-06-20 15:02:43,210{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2025-06-20 15:02:43,210{GMT}	INFO	[jepsen node n2] maelstrom.db: Setting up n2
2025-06-20 15:02:43,210{GMT}	INFO	[jepsen node n4] maelstrom.db: Setting up n4
2025-06-20 15:02:43,210{GMT}	INFO	[jepsen node n5] maelstrom.db: Setting up n5
2025-06-20 15:02:43,210{GMT}	INFO	[jepsen node n3] maelstrom.db: Setting up n3
2025-06-20 15:02:43,211{GMT}	INFO	[jepsen node n4] maelstrom.process: launching ./maelstrom-wrapper.sh []
2025-06-20 15:02:43,211{GMT}	INFO	[jepsen node n5] maelstrom.process: launching ./maelstrom-wrapper.sh []
2025-06-20 15:02:43,211{GMT}	INFO	[jepsen node n2] maelstrom.process: launching ./maelstrom-wrapper.sh []
2025-06-20 15:02:43,211{GMT}	INFO	[jepsen node n3] maelstrom.process: launching ./maelstrom-wrapper.sh []
2025-06-20 15:02:43,211{GMT}	INFO	[jepsen node n1] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2025-06-20 15:02:43,213{GMT}	INFO	[jepsen node n1] maelstrom.db: Setting up n1
2025-06-20 15:02:43,213{GMT}	INFO	[jepsen node n1] maelstrom.process: launching ./maelstrom-wrapper.sh []
2025-06-20 15:02:44,039{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2025-06-20 15:02:44,060{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:invoke	:write	[1 4]
2025-06-20 15:02:44,233{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:ok	:write	[1 4]
2025-06-20 15:02:44,241{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:invoke	:write	[2 3]
2025-06-20 15:02:44,244{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:ok	:write	[2 3]
2025-06-20 15:02:44,424{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:invoke	:write	[2 1]
2025-06-20 15:02:44,430{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:ok	:write	[2 1]
2025-06-20 15:02:44,621{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:invoke	:cas	[2 [4 0]]
2025-06-20 15:02:44,652{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:fail	:cas	[2 [4 0]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:44,755{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:invoke	:cas	[2 [0 3]]
2025-06-20 15:02:44,763{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:fail	:cas	[2 [0 3]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:44,931{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:invoke	:cas	[1 [0 3]]
2025-06-20 15:02:44,952{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:fail	:cas	[1 [0 3]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:45,102{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:invoke	:cas	[2 [2 0]]
2025-06-20 15:02:45,122{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:invoke	:write	[1 0]
2025-06-20 15:02:45,126{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:fail	:cas	[2 [2 0]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:45,143{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:ok	:write	[1 0]
2025-06-20 15:02:45,144{GMT}	INFO	[jepsen worker 8] jepsen.util: 8	:invoke	:cas	[0 [2 1]]
2025-06-20 15:02:45,288{GMT}	INFO	[jepsen worker 8] jepsen.util: 8	:fail	:cas	[0 [2 1]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:45,316{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:invoke	:cas	[2 [4 0]]
2025-06-20 15:02:45,319{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:fail	:cas	[2 [4 0]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:45,493{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:invoke	:write	[1 3]
2025-06-20 15:02:45,510{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:ok	:write	[1 3]
2025-06-20 15:02:45,625{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:invoke	:cas	[2 [4 4]]
2025-06-20 15:02:45,643{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:fail	:cas	[2 [4 4]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:45,712{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	[0 nil]
2025-06-20 15:02:45,739{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:fail	:read	[0 nil]	[:key-does-not-exist "key not found"]
2025-06-20 15:02:45,913{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	[0 nil]
2025-06-20 15:02:45,929{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:fail	:read	[0 nil]	[:key-does-not-exist "key not found"]
2025-06-20 15:02:45,982{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:invoke	:write	[2 2]
2025-06-20 15:02:45,991{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:ok	:write	[2 2]
2025-06-20 15:02:46,086{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:invoke	:cas	[2 [4 4]]
2025-06-20 15:02:46,100{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:fail	:cas	[2 [4 4]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:46,235{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:invoke	:cas	[2 [0 0]]
2025-06-20 15:02:46,243{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:fail	:cas	[2 [0 0]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:46,415{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:invoke	:cas	[0 [3 4]]
2025-06-20 15:02:46,422{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:fail	:cas	[0 [3 4]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:46,553{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:invoke	:cas	[2 [4 1]]
2025-06-20 15:02:46,580{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:fail	:cas	[2 [4 1]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:46,748{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:invoke	:cas	[2 [3 2]]
2025-06-20 15:02:46,768{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:fail	:cas	[2 [3 2]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:46,826{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:invoke	:cas	[1 [4 2]]
2025-06-20 15:02:46,830{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:fail	:cas	[1 [4 2]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:47,028{GMT}	INFO	[jepsen worker 21] jepsen.util: 21	:invoke	:cas	[2 [0 3]]
2025-06-20 15:02:47,077{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:invoke	:write	[0 3]
2025-06-20 15:02:47,083{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:invoke	:cas	[1 [0 1]]
2025-06-20 15:02:47,083{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:ok	:write	[0 3]
2025-06-20 15:02:47,086{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:fail	:cas	[1 [0 1]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:47,183{GMT}	INFO	[jepsen worker 24] jepsen.util: 24	:invoke	:cas	[2 [0 3]]
2025-06-20 15:02:47,228{GMT}	INFO	[jepsen worker 21] jepsen.util: 21	:fail	:cas	[2 [0 3]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:47,285{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:invoke	:cas	[0 [4 2]]
2025-06-20 15:02:47,291{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:fail	:cas	[0 [4 2]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:47,363{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:invoke	:write	[0 1]
2025-06-20 15:02:47,371{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:ok	:write	[0 1]
2025-06-20 15:02:47,395{GMT}	INFO	[jepsen worker 27] jepsen.util: 27	:invoke	:cas	[2 [1 3]]
2025-06-20 15:02:47,405{GMT}	INFO	[jepsen worker 24] jepsen.util: 24	:fail	:cas	[2 [0 3]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:47,452{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:invoke	:cas	[0 [3 0]]
2025-06-20 15:02:47,454{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:fail	:cas	[0 [3 0]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:47,490{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	[0 nil]
2025-06-20 15:02:47,499{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[0 1]
2025-06-20 15:02:47,521{GMT}	INFO	[jepsen worker 27] jepsen.util: 27	:fail	:cas	[2 [1 3]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:47,550{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:invoke	:cas	[2 [4 0]]
2025-06-20 15:02:47,553{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:fail	:cas	[2 [4 0]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:47,632{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:invoke	:cas	[0 [1 4]]
2025-06-20 15:02:47,636{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:ok	:cas	[0 [1 4]]
2025-06-20 15:02:47,718{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:invoke	:cas	[0 [1 2]]
2025-06-20 15:02:47,725{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:fail	:cas	[0 [1 2]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:47,824{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:invoke	:cas	[0 [0 4]]
2025-06-20 15:02:47,829{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:fail	:cas	[0 [0 4]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:48,037{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:invoke	:write	[0 0]
2025-06-20 15:02:48,048{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:ok	:write	[0 0]
2025-06-20 15:02:48,137{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:invoke	:write	[1 0]
2025-06-20 15:02:48,146{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:ok	:write	[1 0]
2025-06-20 15:02:48,314{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:invoke	:write	[0 0]
2025-06-20 15:02:48,327{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:ok	:write	[0 0]
2025-06-20 15:02:48,402{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	[0 nil]
2025-06-20 15:02:48,407{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[0 0]
2025-06-20 15:02:48,496{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:invoke	:cas	[1 [2 2]]
2025-06-20 15:02:48,502{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:fail	:cas	[1 [2 2]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:48,639{GMT}	INFO	[jepsen worker 8] jepsen.util: 8	:invoke	:cas	[0 [1 1]]
2025-06-20 15:02:48,651{GMT}	INFO	[jepsen worker 8] jepsen.util: 8	:fail	:cas	[0 [1 1]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:48,798{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:invoke	:cas	[2 [0 0]]
2025-06-20 15:02:48,818{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:fail	:cas	[2 [0 0]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:48,819{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	[0 nil]
2025-06-20 15:02:48,825{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[0 0]
2025-06-20 15:02:48,858{GMT}	INFO	[jepsen worker 11] jepsen.util: 11	:invoke	:cas	[1 [0 1]]
2025-06-20 15:02:48,870{GMT}	INFO	[jepsen worker 11] jepsen.util: 11	:ok	:cas	[1 [0 1]]
2025-06-20 15:02:48,989{GMT}	INFO	[jepsen worker 12] jepsen.util: 12	:invoke	:cas	[1 [4 3]]
2025-06-20 15:02:48,996{GMT}	INFO	[jepsen worker 12] jepsen.util: 12	:fail	:cas	[1 [4 3]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:49,174{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:invoke	:cas	[2 [1 1]]
2025-06-20 15:02:49,195{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:fail	:cas	[2 [1 1]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:49,244{GMT}	INFO	[jepsen worker 14] jepsen.util: 14	:invoke	:write	[1 2]
2025-06-20 15:02:49,253{GMT}	INFO	[jepsen worker 14] jepsen.util: 14	:ok	:write	[1 2]
2025-06-20 15:02:49,303{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	[0 nil]
2025-06-20 15:02:49,308{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[0 0]
2025-06-20 15:02:49,500{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:invoke	:cas	[0 [3 0]]
2025-06-20 15:02:49,521{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:fail	:cas	[0 [3 0]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:49,522{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	[0 nil]
2025-06-20 15:02:49,529{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[0 0]
2025-06-20 15:02:49,687{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:invoke	:cas	[2 [4 1]]
2025-06-20 15:02:49,698{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:fail	:cas	[2 [4 1]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:49,735{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	[0 nil]
2025-06-20 15:02:49,738{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[0 0]
2025-06-20 15:02:49,762{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	[0 nil]
2025-06-20 15:02:49,764{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[0 0]
2025-06-20 15:02:49,947{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	[0 nil]
2025-06-20 15:02:49,962{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[0 0]
2025-06-20 15:02:50,013{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:invoke	:write	[0 1]
2025-06-20 15:02:50,020{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:ok	:write	[0 1]
2025-06-20 15:02:50,188{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:invoke	:write	[1 2]
2025-06-20 15:02:50,198{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:ok	:write	[1 2]
2025-06-20 15:02:50,353{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	[0 nil]
2025-06-20 15:02:50,370{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[0 1]
2025-06-20 15:02:50,476{GMT}	INFO	[jepsen worker 25] jepsen.util: 25	:invoke	:cas	[2 [0 2]]
2025-06-20 15:02:50,495{GMT}	INFO	[jepsen worker 25] jepsen.util: 25	:fail	:cas	[2 [0 2]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:50,595{GMT}	INFO	[jepsen worker 26] jepsen.util: 26	:invoke	:cas	[2 [3 1]]
2025-06-20 15:02:50,614{GMT}	INFO	[jepsen worker 26] jepsen.util: 26	:fail	:cas	[2 [3 1]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:50,756{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:invoke	:write	[1 4]
2025-06-20 15:02:50,770{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:ok	:write	[1 4]
2025-06-20 15:02:50,804{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:invoke	:write	[0 0]
2025-06-20 15:02:50,815{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:ok	:write	[0 0]
2025-06-20 15:02:50,829{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	[0 nil]
2025-06-20 15:02:50,838{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[0 0]
2025-06-20 15:02:51,012{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:invoke	:write	[2 0]
2025-06-20 15:02:51,029{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:ok	:write	[2 0]
2025-06-20 15:02:51,213{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:invoke	:cas	[2 [2 0]]
2025-06-20 15:02:51,231{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:fail	:cas	[2 [2 0]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:51,276{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:invoke	:cas	[1 [0 2]]
2025-06-20 15:02:51,282{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:fail	:cas	[1 [0 2]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:51,421{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:invoke	:write	[1 1]
2025-06-20 15:02:51,432{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:ok	:write	[1 1]
2025-06-20 15:02:51,498{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:invoke	:cas	[0 [1 2]]
2025-06-20 15:02:51,513{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:invoke	:cas	[1 [2 2]]
2025-06-20 15:02:51,517{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:fail	:cas	[0 [1 2]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:51,519{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:fail	:cas	[1 [2 2]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:51,639{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	[0 nil]
2025-06-20 15:02:51,648{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[0 0]
2025-06-20 15:02:51,823{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:invoke	:write	[2 2]
2025-06-20 15:02:51,835{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:ok	:write	[2 2]
2025-06-20 15:02:51,848{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:invoke	:write	[2 1]
2025-06-20 15:02:51,881{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:ok	:write	[2 1]
2025-06-20 15:02:52,017{GMT}	INFO	[jepsen worker 8] jepsen.util: 8	:invoke	:cas	[0 [1 1]]
2025-06-20 15:02:52,031{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:invoke	:write	[1 0]
2025-06-20 15:02:52,034{GMT}	INFO	[jepsen worker 8] jepsen.util: 8	:fail	:cas	[0 [1 1]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:52,036{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:ok	:write	[1 0]
2025-06-20 15:02:52,071{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:invoke	:write	[1 1]
2025-06-20 15:02:52,079{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:ok	:write	[1 1]
2025-06-20 15:02:52,091{GMT}	INFO	[jepsen worker 11] jepsen.util: 11	:invoke	:cas	[1 [4 3]]
2025-06-20 15:02:52,099{GMT}	INFO	[jepsen worker 11] jepsen.util: 11	:fail	:cas	[1 [4 3]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:52,241{GMT}	INFO	[jepsen worker 12] jepsen.util: 12	:invoke	:cas	[1 [3 4]]
2025-06-20 15:02:52,253{GMT}	INFO	[jepsen worker 12] jepsen.util: 12	:fail	:cas	[1 [3 4]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:52,365{GMT}	INFO	[jepsen worker 13] jepsen.util: 13	:invoke	:cas	[1 [0 0]]
2025-06-20 15:02:52,377{GMT}	INFO	[jepsen worker 13] jepsen.util: 13	:fail	:cas	[1 [0 0]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:52,556{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:invoke	:cas	[2 [3 1]]
2025-06-20 15:02:52,574{GMT}	INFO	[jepsen worker 20] jepsen.util: 20	:fail	:cas	[2 [3 1]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:52,630{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	[0 nil]
2025-06-20 15:02:52,637{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[0 0]
2025-06-20 15:02:52,798{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	[0 nil]
2025-06-20 15:02:52,814{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[0 0]
2025-06-20 15:02:52,981{GMT}	INFO	[jepsen worker 17] jepsen.util: 17	:invoke	:write	[1 3]
2025-06-20 15:02:53,012{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:invoke	:cas	[0 [2 3]]
2025-06-20 15:02:53,012{GMT}	INFO	[jepsen worker 17] jepsen.util: 17	:ok	:write	[1 3]
2025-06-20 15:02:53,014{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:fail	:cas	[0 [2 3]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:53,180{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	[0 nil]
2025-06-20 15:02:53,202{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[0 0]
2025-06-20 15:02:53,385{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:invoke	:cas	[1 [3 2]]
2025-06-20 15:02:53,417{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:ok	:cas	[1 [3 2]]
2025-06-20 15:02:53,532{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:invoke	:cas	[1 [1 2]]
2025-06-20 15:02:53,546{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:fail	:cas	[1 [1 2]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:53,551{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:invoke	:write	[1 1]
2025-06-20 15:02:53,560{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:ok	:write	[1 1]
2025-06-20 15:02:53,624{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:invoke	:cas	[1 [2 1]]
2025-06-20 15:02:53,637{GMT}	INFO	[jepsen worker 10] jepsen.util: 10	:fail	:cas	[1 [2 1]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:53,804{GMT}	INFO	[jepsen worker 24] jepsen.util: 24	:invoke	:cas	[2 [4 1]]
2025-06-20 15:02:53,819{GMT}	INFO	[jepsen worker 24] jepsen.util: 24	:fail	:cas	[2 [4 1]]	[:precondition-failed "expected value does not match"]
2025-06-20 15:02:53,954{GMT}	INFO	[jepsen worker 25] jepsen.util: 25	:invoke	:cas	[2 [1 0]]
2025-06-20 15:02:53,972{GMT}	INFO	[jepsen worker 25] jepsen.util: 25	:ok	:cas	[2 [1 0]]
2025-06-20 15:02:53,994{GMT}	INFO	[jepsen test runner] jepsen.core: Run complete, writing
2025-06-20 15:02:54,027{GMT}	INFO	[jepsen node n2] maelstrom.db: Tearing down n2
2025-06-20 15:02:54,027{GMT}	INFO	[jepsen node n1] maelstrom.db: Tearing down n1
2025-06-20 15:02:54,027{GMT}	INFO	[jepsen node n3] maelstrom.db: Tearing down n3
2025-06-20 15:02:54,027{GMT}	INFO	[jepsen node n4] maelstrom.db: Tearing down n4
2025-06-20 15:02:54,027{GMT}	INFO	[jepsen node n5] maelstrom.db: Tearing down n5
2025-06-20 15:02:55,271{GMT}	INFO	[jepsen node n1] maelstrom.net: Shutting down Maelstrom network
2025-06-20 15:02:55,302{GMT}	INFO	[jepsen test runner] jepsen.core: Analyzing...
2025-06-20 15:02:55,383{GMT}	INFO	[clojure-agent-send-pool-1] jepsen.independent: Wrote /Users/hiroyuki/Dropbox/Docs/git/scalardb-maelstrom-kv/store/lin-kv/20250620T150242.058+0900/independent/1/results.edn
2025-06-20 15:02:55,383{GMT}	INFO	[clojure-agent-send-pool-2] jepsen.independent: Wrote /Users/hiroyuki/Dropbox/Docs/git/scalardb-maelstrom-kv/store/lin-kv/20250620T150242.058+0900/independent/2/results.edn
2025-06-20 15:02:55,383{GMT}	INFO	[clojure-agent-send-pool-0] jepsen.independent: Wrote /Users/hiroyuki/Dropbox/Docs/git/scalardb-maelstrom-kv/store/lin-kv/20250620T150242.058+0900/independent/0/results.edn
2025-06-20 15:02:55,385{GMT}	INFO	[clojure-agent-send-pool-1] jepsen.independent: Wrote /Users/hiroyuki/Dropbox/Docs/git/scalardb-maelstrom-kv/store/lin-kv/20250620T150242.058+0900/independent/1/history.edn
2025-06-20 15:02:55,385{GMT}	INFO	[clojure-agent-send-pool-2] jepsen.independent: Wrote /Users/hiroyuki/Dropbox/Docs/git/scalardb-maelstrom-kv/store/lin-kv/20250620T150242.058+0900/independent/2/history.edn
2025-06-20 15:02:55,387{GMT}	INFO	[clojure-agent-send-pool-0] jepsen.independent: Wrote /Users/hiroyuki/Dropbox/Docs/git/scalardb-maelstrom-kv/store/lin-kv/20250620T150242.058+0900/independent/0/history.edn
2025-06-20 15:02:55,398{GMT}	INFO	[jepsen test runner] jepsen.core: Analysis complete
2025-06-20 15:02:55,409{GMT}	INFO	[jepsen results] jepsen.store: Wrote /Users/hiroyuki/Dropbox/Docs/git/scalardb-maelstrom-kv/store/lin-kv/20250620T150242.058+0900/results.edn
2025-06-20 15:02:55,432{GMT}	INFO	[jepsen test runner] jepsen.core: {:perf {:latency-graph {:valid? true},
        :rate-graph {:valid? true},
        :valid? true},
 :timeline {:valid? true},
 :exceptions {:valid? true},
 :stats {:valid? true,
         :count 88,
         :ok-count 42,
         :fail-count 46,
         :info-count 0,
         :by-f {:cas {:valid? true,
                      :count 48,
                      :ok-count 4,
                      :fail-count 44,
                      :info-count 0},
                :read {:valid? true,
                       :count 16,
                       :ok-count 14,
                       :fail-count 2,
                       :info-count 0},
                :write {:valid? true,
                        :count 24,
                        :ok-count 24,
                        :fail-count 0,
                        :info-count 0}}},
 :availability {:valid? true, :ok-fraction 0.47727272},
 :net {:all {:send-count 186,
             :recv-count 186,
             :msg-count 186,
             :msgs-per-op 2.1136363},
       :clients {:send-count 186, :recv-count 186, :msg-count 186},
       :servers {:send-count 0,
                 :recv-count 0,
                 :msg-count 0,
                 :msgs-per-op 0.0},
       :valid? true},
 :workload {:valid? true,
            :results {0 {:linearizable {:valid? true,
                                        :configs ({:model #knossos.model.CASRegister{:value 0},
                                                   :last-op {:process 0,
                                                             :type :ok,
                                                             :f :read,
                                                             :value 0,
                                                             :index 163,
                                                             :time 9163646167},
                                                   :pending []}),
                                        :final-paths ()},
                         :timeline {:valid? true},
                         :valid? true},
                      1 {:linearizable {:valid? true,
                                        :configs ({:model #knossos.model.CASRegister{:value 1},
                                                   :last-op {:process 10,
                                                             :type :ok,
                                                             :f :write,
                                                             :value 1,
                                                             :index 169,
                                                             :time 9520905083},
                                                   :pending []}),
                                        :final-paths ()},
                         :timeline {:valid? true},
                         :valid? true},
                      2 {:linearizable {:valid? true,
                                        :configs ({:model #knossos.model.CASRegister{:value 0},
                                                   :last-op {:process 25,
                                                             :type :ok,
                                                             :f :cas,
                                                             :value [1
                                                                     0],
                                                             :index 175,
                                                             :time 9932914125},
                                                   :pending []}),
                                        :final-paths ()},
                         :timeline {:valid? true},
                         :valid? true}},
            :failures []},
 :valid? true}


Everything looks good! ヽ(‘ー`)ノ
