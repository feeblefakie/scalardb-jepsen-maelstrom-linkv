2025-06-20 11:55:16,434{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w lin-kv --bin ./maelstrom-wrapper.sh --concurrency 10 --time-limit 5 --rate 10 --key-count 1
2025-06-20 11:55:16,466{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count nil
 :availability nil
 :max-txn-length 4
 :concurrency 10
 :key-count 1
 :db
 #object[maelstrom.db$db$reify__16612
         "0x69c27acb"
         "maelstrom.db$db$reify__16612@69c27acb"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "lin-kv"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0xf500481" "2025-06-20T11:55:16.406+09:00"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15721
         "0x38dde7ec"
         "maelstrom.net$jepsen_net$reify__15721@38dde7ec"]
 :client
 #object[maelstrom.workload.lin_kv$client$reify__20973
         "0x3bc57af4"
         "maelstrom.workload.lin_kv$client$reify__20973@3bc57af4"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x3f19f197"
         "java.util.concurrent.CyclicBarrier@3f19f197"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 10.0
 :checker
 #object[jepsen.checker$compose$reify__11089
         "0x30628ef9"
         "jepsen.checker$compose$reify__11089@30628ef9"]
 :argv
 ("test"
  "-w"
  "lin-kv"
  "--bin"
  "./maelstrom-wrapper.sh"
  "--concurrency"
  "10"
  "--time-limit"
  "5"
  "--rate"
  "10"
  "--key-count"
  "1")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16905@6757ed9e"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16886@77d5395a"]})
 :nodes ["n1" "n2" "n3" "n4" "n5"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "./maelstrom-wrapper.sh"
 :generator
 #object[jepsen.util.Forgettable
         "0x5af850f1"
         (jepsen.generator.TimeLimit
          {:limit 5000000000,
           :cutoff nil,
           :gen (jepsen.generator.Any
                 {:gens [(jepsen.generator.OnThreads
                          {:f #{:nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                                   "0x734db023"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__12077@734db023"],
                           :gen nil})
                         (jepsen.generator.OnThreads
                          {:f #jepsen.generator.context.AllBut{:element :nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                                   "0x22bf2a0d"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__12077@22bf2a0d"],
                           :gen (jepsen.generator.Stagger
                                 {:dt 200000000,
                                  :next-time nil,
                                  :gen (jepsen.generator.OnThreads
                                        {:f #jepsen.generator.context.AllBut{:element :nemesis},
                                         :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                                                 "0x61774805"
                                                                 "jepsen.generator.context$make_thread_filter$lazy_filter__12077@61774805"],
                                         :gen (jepsen.independent.ConcurrentGenerator
                                               {:n 10,
                                                :fgen #object[jepsen.tests.linearizable_register$test$fn__17385
                                                              "0x57e351a"
                                                              "jepsen.tests.linearizable_register$test$fn__17385@57e351a"],
                                                :group->threads nil,
                                                :thread->group nil,
                                                :group->context-filter nil,
                                                :keys (0 1 2 3 4 5 6 7 ...),
                                                :gens nil})})})})]})})]
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15724
         "0x4098ef14"
         "maelstrom.net$jepsen_os$reify__15724@4098ef14"]
 :time-limit 5
 :workload :lin-kv
 :consistency-models [:strict-serializable]
 :topology :grid}

2025-06-20 11:55:17,541{GMT}	INFO	[jepsen node n1] maelstrom.net: Starting Maelstrom network
2025-06-20 11:55:17,542{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2025-06-20 11:55:17,543{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2025-06-20 11:55:17,543{GMT}	INFO	[jepsen node n3] maelstrom.db: Setting up n3
2025-06-20 11:55:17,543{GMT}	INFO	[jepsen node n5] maelstrom.db: Setting up n5
2025-06-20 11:55:17,543{GMT}	INFO	[jepsen node n2] maelstrom.db: Setting up n2
2025-06-20 11:55:17,543{GMT}	INFO	[jepsen node n4] maelstrom.db: Setting up n4
2025-06-20 11:55:17,544{GMT}	INFO	[jepsen node n4] maelstrom.process: launching ./maelstrom-wrapper.sh []
2025-06-20 11:55:17,544{GMT}	INFO	[jepsen node n2] maelstrom.process: launching ./maelstrom-wrapper.sh []
2025-06-20 11:55:17,544{GMT}	INFO	[jepsen node n5] maelstrom.process: launching ./maelstrom-wrapper.sh []
2025-06-20 11:55:17,544{GMT}	INFO	[jepsen node n3] maelstrom.process: launching ./maelstrom-wrapper.sh []
2025-06-20 11:55:17,545{GMT}	INFO	[jepsen node n1] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2025-06-20 11:55:17,546{GMT}	INFO	[jepsen node n1] maelstrom.db: Setting up n1
2025-06-20 11:55:17,546{GMT}	INFO	[jepsen node n1] maelstrom.process: launching ./maelstrom-wrapper.sh []
2025-06-20 11:55:18,671{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2025-06-20 11:55:18,687{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	[0 nil]
2025-06-20 11:55:18,701{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:read	[0 nil]
2025-06-20 11:55:18,786{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:invoke	:cas	[0 [4 1]]
2025-06-20 11:55:18,863{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:fail	:read	[0 nil]	[:key-does-not-exist "key not found"]
2025-06-20 11:55:18,863{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:fail	:read	[0 nil]	[:key-does-not-exist "key not found"]
2025-06-20 11:55:18,867{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:fail	:cas	[0 [4 1]]	[:precondition-failed "expected value does not match"]
2025-06-20 11:55:18,896{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:invoke	:cas	[0 [3 3]]
2025-06-20 11:55:18,899{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:fail	:cas	[0 [3 3]]	[:precondition-failed "expected value does not match"]
2025-06-20 11:55:18,946{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:invoke	:cas	[0 [0 0]]
2025-06-20 11:55:18,949{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:fail	:cas	[0 [0 0]]	[:precondition-failed "expected value does not match"]
2025-06-20 11:55:19,011{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	[0 nil]
2025-06-20 11:55:19,013{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:fail	:read	[0 nil]	[:key-does-not-exist "key not found"]
2025-06-20 11:55:19,215{GMT}	INFO	[jepsen worker 6] jepsen.util: 6	:invoke	:cas	[0 [3 3]]
2025-06-20 11:55:19,240{GMT}	INFO	[jepsen worker 6] jepsen.util: 6	:fail	:cas	[0 [3 3]]	[:precondition-failed "expected value does not match"]
2025-06-20 11:55:19,272{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	[0 nil]
2025-06-20 11:55:19,281{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:read	[0 nil]
2025-06-20 11:55:19,287{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:fail	:read	[0 nil]	[:key-does-not-exist "key not found"]
2025-06-20 11:55:19,287{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:fail	:read	[0 nil]	[:key-does-not-exist "key not found"]
2025-06-20 11:55:19,319{GMT}	INFO	[jepsen worker 9] jepsen.util: 9	:invoke	:cas	[0 [3 2]]
2025-06-20 11:55:19,363{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	[0 nil]
2025-06-20 11:55:19,366{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:fail	:read	[0 nil]	[:key-does-not-exist "key not found"]
2025-06-20 11:55:19,465{GMT}	INFO	[jepsen worker 9] jepsen.util: 9	:fail	:cas	[0 [3 2]]	[:precondition-failed "expected value does not match"]
2025-06-20 11:55:19,485{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:invoke	:cas	[0 [2 0]]
2025-06-20 11:55:19,488{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:fail	:cas	[0 [2 0]]	[:precondition-failed "expected value does not match"]
2025-06-20 11:55:19,673{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:invoke	:cas	[0 [4 4]]
2025-06-20 11:55:19,680{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:fail	:cas	[0 [4 4]]	[:precondition-failed "expected value does not match"]
2025-06-20 11:55:19,832{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:read	[0 nil]
2025-06-20 11:55:19,917{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:invoke	:cas	[0 [2 1]]
2025-06-20 11:55:19,923{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:fail	:cas	[0 [2 1]]	[:precondition-failed "expected value does not match"]
2025-06-20 11:55:20,007{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	[0 nil]
2025-06-20 11:55:20,019{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:fail	:read	[0 nil]	[:key-does-not-exist "key not found"]
2025-06-20 11:55:20,052{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:fail	:read	[0 nil]	[:key-does-not-exist "key not found"]
2025-06-20 11:55:20,175{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:invoke	:cas	[0 [1 1]]
2025-06-20 11:55:20,177{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:fail	:cas	[0 [1 1]]	[:precondition-failed "expected value does not match"]
2025-06-20 11:55:20,290{GMT}	INFO	[jepsen worker 6] jepsen.util: 6	:invoke	:cas	[0 [4 1]]
2025-06-20 11:55:20,303{GMT}	INFO	[jepsen worker 6] jepsen.util: 6	:fail	:cas	[0 [4 1]]	[:precondition-failed "expected value does not match"]
2025-06-20 11:55:20,374{GMT}	INFO	[jepsen worker 7] jepsen.util: 7	:invoke	:cas	[0 [4 4]]
2025-06-20 11:55:20,405{GMT}	INFO	[jepsen worker 7] jepsen.util: 7	:fail	:cas	[0 [4 4]]	[:precondition-failed "expected value does not match"]
2025-06-20 11:55:20,512{GMT}	INFO	[jepsen worker 8] jepsen.util: 8	:invoke	:cas	[0 [3 3]]
2025-06-20 11:55:20,575{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	[0 nil]
2025-06-20 11:55:20,577{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:fail	:read	[0 nil]	[:key-does-not-exist "key not found"]
2025-06-20 11:55:20,579{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:invoke	:cas	[0 [4 2]]
2025-06-20 11:55:20,583{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:fail	:cas	[0 [4 2]]	[:precondition-failed "expected value does not match"]
2025-06-20 11:55:20,627{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	[0 nil]
2025-06-20 11:55:20,632{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:fail	:read	[0 nil]	[:key-does-not-exist "key not found"]
2025-06-20 11:55:20,654{GMT}	INFO	[jepsen worker 8] jepsen.util: 8	:fail	:cas	[0 [3 3]]	[:precondition-failed "expected value does not match"]
2025-06-20 11:55:20,750{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:invoke	:write	[0 0]
2025-06-20 11:55:20,759{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:ok	:write	[0 0]
2025-06-20 11:55:20,923{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:invoke	:cas	[0 [0 3]]
2025-06-20 11:55:20,945{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:ok	:cas	[0 [0 3]]
2025-06-20 11:55:20,961{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:read	[0 nil]
2025-06-20 11:55:20,989{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:read	[0 3]
2025-06-20 11:55:21,109{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	[0 nil]
2025-06-20 11:55:21,120{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:read	[0 3]
2025-06-20 11:55:21,242{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:invoke	:write	[0 1]
2025-06-20 11:55:21,253{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:ok	:write	[0 1]
2025-06-20 11:55:21,362{GMT}	INFO	[jepsen worker 6] jepsen.util: 6	:invoke	:write	[0 2]
2025-06-20 11:55:21,374{GMT}	INFO	[jepsen worker 6] jepsen.util: 6	:ok	:write	[0 2]
2025-06-20 11:55:21,436{GMT}	INFO	[jepsen worker 7] jepsen.util: 7	:invoke	:write	[0 1]
2025-06-20 11:55:21,471{GMT}	INFO	[jepsen worker 7] jepsen.util: 7	:ok	:write	[0 1]
2025-06-20 11:55:21,514{GMT}	INFO	[jepsen worker 8] jepsen.util: 8	:invoke	:cas	[0 [4 3]]
2025-06-20 11:55:21,520{GMT}	INFO	[jepsen worker 8] jepsen.util: 8	:fail	:cas	[0 [4 3]]	[:precondition-failed "expected value does not match"]
2025-06-20 11:55:21,528{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	[0 nil]
2025-06-20 11:55:21,548{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[0 1]
2025-06-20 11:55:21,704{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	[0 nil]
2025-06-20 11:55:21,709{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[0 1]
2025-06-20 11:55:21,845{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	[0 nil]
2025-06-20 11:55:21,853{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[0 1]
2025-06-20 11:55:21,899{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:invoke	:cas	[0 [0 0]]
2025-06-20 11:55:21,920{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:fail	:cas	[0 [0 0]]	[:precondition-failed "expected value does not match"]
2025-06-20 11:55:22,044{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:read	[0 nil]
2025-06-20 11:55:22,072{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:read	[0 1]
2025-06-20 11:55:22,244{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:read	[0 nil]
2025-06-20 11:55:22,251{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:read	[0 1]
2025-06-20 11:55:22,259{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:invoke	:write	[0 2]
2025-06-20 11:55:22,280{GMT}	INFO	[jepsen worker 6] jepsen.util: 6	:invoke	:cas	[0 [1 3]]
2025-06-20 11:55:22,289{GMT}	INFO	[jepsen worker 6] jepsen.util: 6	:fail	:cas	[0 [1 3]]	[:precondition-failed "expected value does not match"]
2025-06-20 11:55:22,289{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:ok	:write	[0 2]
2025-06-20 11:55:22,323{GMT}	INFO	[jepsen worker 6] jepsen.util: 6	:invoke	:write	[0 4]
2025-06-20 11:55:22,384{GMT}	INFO	[jepsen worker 6] jepsen.util: 6	:ok	:write	[0 4]
2025-06-20 11:55:22,465{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	[0 nil]
2025-06-20 11:55:22,471{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[0 4]
2025-06-20 11:55:22,562{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	[0 nil]
2025-06-20 11:55:22,574{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[0 4]
2025-06-20 11:55:22,623{GMT}	INFO	[jepsen worker 9] jepsen.util: 9	:invoke	:cas	[0 [0 0]]
2025-06-20 11:55:22,648{GMT}	INFO	[jepsen worker 9] jepsen.util: 9	:fail	:cas	[0 [0 0]]	[:precondition-failed "expected value does not match"]
2025-06-20 11:55:22,721{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	[0 nil]
2025-06-20 11:55:22,754{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[0 4]
2025-06-20 11:55:22,758{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:invoke	:cas	[0 [4 3]]
2025-06-20 11:55:22,763{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:ok	:cas	[0 [4 3]]
2025-06-20 11:55:22,846{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:invoke	:cas	[0 [3 2]]
2025-06-20 11:55:22,870{GMT}	INFO	[jepsen worker 6] jepsen.util: 6	:invoke	:write	[0 2]
2025-06-20 11:55:22,874{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:ok	:cas	[0 [3 2]]
2025-06-20 11:55:22,874{GMT}	INFO	[jepsen worker 6] jepsen.util: 6	:ok	:write	[0 2]
2025-06-20 11:55:22,876{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:read	[0 nil]
2025-06-20 11:55:22,878{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:read	[0 2]
2025-06-20 11:55:22,891{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	[0 nil]
2025-06-20 11:55:22,894{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:read	[0 2]
2025-06-20 11:55:23,057{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:invoke	:cas	[0 [2 0]]
2025-06-20 11:55:23,060{GMT}	INFO	[jepsen worker 5] jepsen.util: 5	:ok	:cas	[0 [2 0]]
2025-06-20 11:55:23,222{GMT}	INFO	[jepsen worker 6] jepsen.util: 6	:invoke	:cas	[0 [0 3]]
2025-06-20 11:55:23,238{GMT}	INFO	[jepsen worker 6] jepsen.util: 6	:ok	:cas	[0 [0 3]]
2025-06-20 11:55:23,398{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	[0 nil]
2025-06-20 11:55:23,408{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[0 3]
2025-06-20 11:55:23,416{GMT}	INFO	[jepsen worker 8] jepsen.util: 8	:invoke	:cas	[0 [0 2]]
2025-06-20 11:55:23,428{GMT}	INFO	[jepsen worker 8] jepsen.util: 8	:fail	:cas	[0 [0 2]]	[:precondition-failed "expected value does not match"]
2025-06-20 11:55:23,525{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	[0 nil]
2025-06-20 11:55:23,536{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[0 3]
2025-06-20 11:55:23,561{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	[0 nil]
2025-06-20 11:55:23,571{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[0 3]
2025-06-20 11:55:23,722{GMT}	INFO	[jepsen test runner] jepsen.core: Run complete, writing
2025-06-20 11:55:23,755{GMT}	INFO	[jepsen node n1] maelstrom.db: Tearing down n1
2025-06-20 11:55:23,755{GMT}	INFO	[jepsen node n2] maelstrom.db: Tearing down n2
2025-06-20 11:55:23,755{GMT}	INFO	[jepsen node n4] maelstrom.db: Tearing down n4
2025-06-20 11:55:23,755{GMT}	INFO	[jepsen node n3] maelstrom.db: Tearing down n3
2025-06-20 11:55:23,755{GMT}	INFO	[jepsen node n5] maelstrom.db: Tearing down n5
2025-06-20 11:55:24,584{GMT}	INFO	[jepsen node n1] maelstrom.net: Shutting down Maelstrom network
2025-06-20 11:55:24,596{GMT}	INFO	[jepsen test runner] jepsen.core: Analyzing...
2025-06-20 11:55:24,702{GMT}	INFO	[clojure-agent-send-pool-0] jepsen.independent: Wrote /Users/hiroyuki/Dropbox/Docs/git/scalardb-maelstrom-kv/store/lin-kv/20250620T115516.406+0900/independent/0/results.edn
2025-06-20 11:55:24,705{GMT}	INFO	[clojure-agent-send-pool-0] jepsen.independent: Wrote /Users/hiroyuki/Dropbox/Docs/git/scalardb-maelstrom-kv/store/lin-kv/20250620T115516.406+0900/independent/0/history.edn
2025-06-20 11:55:24,710{GMT}	INFO	[jepsen test runner] jepsen.core: Analysis complete
2025-06-20 11:55:24,728{GMT}	INFO	[jepsen results] jepsen.store: Wrote /Users/hiroyuki/Dropbox/Docs/git/scalardb-maelstrom-kv/store/lin-kv/20250620T115516.406+0900/results.edn
2025-06-20 11:55:24,753{GMT}	INFO	[jepsen test runner] jepsen.core: {:perf {:latency-graph {:valid? true},
        :rate-graph {:valid? true},
        :valid? true},
 :timeline {:valid? true},
 :exceptions {:valid? true},
 :stats {:valid? true,
         :count 55,
         :ok-count 27,
         :fail-count 28,
         :info-count 0,
         :by-f {:cas {:valid? true,
                      :count 23,
                      :ok-count 5,
                      :fail-count 18,
                      :info-count 0},
                :read {:valid? true,
                       :count 25,
                       :ok-count 15,
                       :fail-count 10,
                       :info-count 0},
                :write {:valid? true,
                        :count 7,
                        :ok-count 7,
                        :fail-count 0,
                        :info-count 0}}},
 :availability {:valid? true, :ok-fraction 0.4909091},
 :net {:all {:send-count 120,
             :recv-count 120,
             :msg-count 120,
             :msgs-per-op 2.1818182},
       :clients {:send-count 120, :recv-count 120, :msg-count 120},
       :servers {:send-count 0,
                 :recv-count 0,
                 :msg-count 0,
                 :msgs-per-op 0.0},
       :valid? true},
 :workload {:valid? true,
            :results {0 {:linearizable {:valid? true,
                                        :configs ({:model #knossos.model.CASRegister{:value 3},
                                                   :last-op {:process 0,
                                                             :type :ok,
                                                             :f :read,
                                                             :value 3,
                                                             :index 109,
                                                             :time 4900702375},
                                                   :pending []}),
                                        :final-paths ()},
                         :timeline {:valid? true},
                         :valid? true}},
            :failures []},
 :valid? true}


Everything looks good! ヽ(‘ー`)ノ
