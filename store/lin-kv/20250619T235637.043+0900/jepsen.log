2025-06-19 23:56:37,070{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w lin-kv --bin ./maelstrom-memory-test.sh --node-count 1 --concurrency 2 --time-limit 5 --rate 0.5
2025-06-19 23:56:37,098{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count 1
 :availability nil
 :max-txn-length 4
 :concurrency 2
 :db
 #object[maelstrom.db$db$reify__16612
         "0x7307e418"
         "maelstrom.db$db$reify__16612@7307e418"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "lin-kv"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x69c27acb" "2025-06-19T23:56:37.043+09:00"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15721
         "0x72b8b04f"
         "maelstrom.net$jepsen_net$reify__15721@72b8b04f"]
 :client
 #object[maelstrom.workload.lin_kv$client$reify__20973
         "0x1b131102"
         "maelstrom.workload.lin_kv$client$reify__20973@1b131102"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x75be3cdf"
         "java.util.concurrent.CyclicBarrier@75be3cdf"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 0.5
 :checker
 #object[jepsen.checker$compose$reify__11089
         "0xf500481"
         "jepsen.checker$compose$reify__11089@f500481"]
 :argv
 ("test"
  "-w"
  "lin-kv"
  "--bin"
  "./maelstrom-memory-test.sh"
  "--node-count"
  "1"
  "--concurrency"
  "2"
  "--time-limit"
  "5"
  "--rate"
  "0.5")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16905@38dde7ec"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16886@3bc57af4"]})
 :nodes ["n0"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "./maelstrom-memory-test.sh"
 :generator
 #object[jepsen.util.Forgettable
         "0x2523730b"
         (jepsen.generator.TimeLimit
          {:limit 5000000000,
           :cutoff nil,
           :gen (jepsen.generator.Any
                 {:gens [(jepsen.generator.OnThreads
                          {:f #{:nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                                   "0x87f8146"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__12077@87f8146"],
                           :gen nil})
                         (jepsen.generator.OnThreads
                          {:f #jepsen.generator.context.AllBut{:element :nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                                   "0x10982760"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__12077@10982760"],
                           :gen (jepsen.generator.Stagger
                                 {:dt 4000000000,
                                  :next-time nil,
                                  :gen (jepsen.generator.OnThreads
                                        {:f #jepsen.generator.context.AllBut{:element :nemesis},
                                         :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                                                 "0x50626d22"
                                                                 "jepsen.generator.context$make_thread_filter$lazy_filter__12077@50626d22"],
                                         :gen (jepsen.independent.ConcurrentGenerator
                                               {:n 2,
                                                :fgen #object[jepsen.tests.linearizable_register$test$fn__17385
                                                              "0x7cc742d"
                                                              "jepsen.tests.linearizable_register$test$fn__17385@7cc742d"],
                                                :group->threads nil,
                                                :thread->group nil,
                                                :group->context-filter nil,
                                                :keys (0 1 2 3 4 5 6 7 ...),
                                                :gens nil})})})})]})})]
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15724
         "0x22bf2a0d"
         "maelstrom.net$jepsen_os$reify__15724@22bf2a0d"]
 :time-limit 5
 :workload :lin-kv
 :consistency-models [:strict-serializable]
 :topology :grid}

2025-06-19 23:56:38,033{GMT}	INFO	[jepsen node n0] maelstrom.net: Starting Maelstrom network
2025-06-19 23:56:38,034{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2025-06-19 23:56:38,035{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2025-06-19 23:56:38,036{GMT}	INFO	[jepsen node n0] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2025-06-19 23:56:38,037{GMT}	INFO	[jepsen node n0] maelstrom.db: Setting up n0
2025-06-19 23:56:38,037{GMT}	INFO	[jepsen node n0] maelstrom.process: launching ./maelstrom-memory-test.sh []
2025-06-19 23:56:48,050{GMT}	INFO	[jepsen node n0] maelstrom.db: Tearing down n0
2025-06-19 23:56:48,085{GMT}	INFO	[jepsen node n0] maelstrom.net: Shutting down Maelstrom network
2025-06-19 23:56:48,086{GMT}	WARN	[jepsen test runner] jepsen.core: Test crashed!
clojure.lang.ExceptionInfo: Node n0 crashed with exit status 1. Before crashing, it wrote to STDOUT:



And to STDERR:

/tmp/maelstrom-test.java:5: error: class Test is public, should be declared in a file named Test.java
public class Test {
       ^
Note: /tmp/maelstrom-test.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
1 error
Error: Could not find or load main class Test
Caused by: java.lang.ClassNotFoundException: Test

Full STDERR logs are available in /Users/hiroyuki/Dropbox/Docs/git/scalardb-maelstrom-kv/store/lin-kv/20250619T235637.043+0900/node-logs/n0.log
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.process$stop_node_BANG_.invokeStatic(process.clj:239)
	at maelstrom.process$stop_node_BANG_.invoke(process.clj:217)
	at maelstrom.db$db$reify__16612.teardown_BANG_(db.clj:75)
	at jepsen.db$fn__11629$G__11610__11633.invoke(db.clj:12)
	at jepsen.db$fn__11629$G__11609__11638.invoke(db.clj:12)
	at clojure.core$partial$fn__5927.invoke(core.clj:2642)
	at jepsen.control$on_nodes$fn__9552.invoke(control.clj:319)
	at clojure.lang.AFn.applyToHelper(AFn.java:154)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:667)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1990)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1990)
	at clojure.lang.RestFn.applyTo(RestFn.java:145)
	at clojure.core$apply.invokeStatic(core.clj:671)
	at clojure.core$bound_fn_STAR_$fn__5837.doInvoke(core.clj:2020)
	at clojure.lang.RestFn.invoke(RestFn.java:411)
	at clojure.core$mapv$fn__8565.invoke(core.clj:7059)
	at clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
	at clojure.core.protocols$fn__8270.invokeStatic(protocols.clj:135)
	at clojure.core.protocols$fn__8270.invoke(protocols.clj:123)
	at clojure.core.protocols$fn__8229$G__8224__8238.invoke(protocols.clj:19)
	at clojure.core.protocols$seq_reduce.invokeStatic(protocols.clj:31)
	at clojure.core.protocols$fn__8262.invokeStatic(protocols.clj:74)
	at clojure.core.protocols$fn__8262.invoke(protocols.clj:74)
	at clojure.core.protocols$fn__8203$G__8198__8216.invoke(protocols.clj:13)
	at clojure.core$reduce.invokeStatic(core.clj:6965)
	at clojure.core$mapv.invokeStatic(core.clj:7050)
	at clojure.core$mapv.invoke(core.clj:7050)
	at jepsen.control$on_nodes.invokeStatic(control.clj:316)
	at jepsen.control$on_nodes.invoke(control.clj:299)
	at jepsen.control$on_nodes.invokeStatic(control.clj:304)
	at jepsen.control$on_nodes.invoke(control.clj:299)
	at jepsen.core$run_BANG_$fn__13912$fn__13915.invoke(core.clj:399)
	at jepsen.core$run_BANG_$fn__13912.invoke(core.clj:398)
	at jepsen.core$run_BANG_.invokeStatic(core.clj:396)
	at jepsen.core$run_BANG_.invoke(core.clj:322)
	at jepsen.cli$single_test_cmd$fn__15082.invoke(cli.clj:396)
	at jepsen.cli$run_BANG_.invokeStatic(cli.clj:329)
	at jepsen.cli$run_BANG_.invoke(cli.clj:258)
	at maelstrom.core$_main.invokeStatic(core.clj:269)
	at maelstrom.core$_main.doInvoke(core.clj:267)
	at clojure.lang.RestFn.applyTo(RestFn.java:140)
	at maelstrom.core.main(Unknown Source)
